
strategy:
  matrix:
    vs2017-win2016_2.7:
      vmImage: 'Windows'
      build_name: 'vs2017-win2016_Windows_EDM'
    vs2017-win2016_3.4:
      vmImage: 'Windows'
      build_name: 'vs2017-win2016_Windows_EDM'
    vs2017-win2016_3.5:
      vmImage: 'Windows'
      build_name: 'vs2017-win2016_Windows_EDM'
    vs2017-win2016_3.6:
      vmImage: 'Windows'
      build_name: 'vs2017-win2016_Windows_EDM'
    vs2017-win2016_3.7:
      vmImage: 'Windows'
      build_name: 'vs2017-win2016_Windows_EDM'
    macos-10.13_2.7:
      vmImage: 'MacOS'
      build_name: 'macos-10.13_MacOS_EDM'
    macos-10.13_3.4:
      vmImage: 'MacOS'
      build_name: 'macos-10.13_MacOS_EDM'
    macos-10.13_3.5:
      vmImage: 'MacOS'
      build_name: 'macos-10.13_MacOS_EDM'
    macos-10.13_3.6:
      vmImage: 'MacOS'
      build_name: 'macos-10.13_MacOS_EDM'
    macos-10.13_3.7:
      vmImage: 'MacOS'
      build_name: 'macos-10.13_MacOS_EDM'
    ubuntu-latest_2.7:
      vmImage: 'Linux'
      build_name: 'ubuntu-latest_Linux_EDM'
    ubuntu-latest_3.4:
      vmImage: 'Linux'
      build_name: 'ubuntu-latest_Linux_EDM'
    ubuntu-latest_3.5:
      vmImage: 'Linux'
      build_name: 'ubuntu-latest_Linux_EDM'
    ubuntu-latest_3.6:
      vmImage: 'Linux'
      build_name: 'ubuntu-latest_Linux_EDM'
    ubuntu-latest_3.7:
      vmImage: 'Linux'
      build_name: 'ubuntu-latest_Linux_EDM'

pool:
  vmImage: $(vmImage)
  python.version: $(python.version)

steps:
#only setup the visual studio environment if on windowz
- task: BatchScript@1
  inputs:
    filename: 'C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat'
    arguments: 'amd64'
    modifyEnvironment: True 
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: setup visual studio env on windows

#download eigen for cppEDM
- script: git clone https://github.com/eigenteam/eigen-git-mirror eigen_git
  displayName: download eigen
- script: mv eigen_git/Eigen .

#print which version python using for testing
- script: python --version

#build cppEDM with respective makefile
- script: make -C cppEDM/src -f makefile.windows
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: building cppEDM on windows
- script: make -C cppEDM/src
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: building cppEDM on macOS
- script: make -C cppEDM/src 
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: building cppEDM on linux

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'

#build the package and download
- script: pip install pybind11
- script: python setup.py build

- publish: $(System.DefaultWorkingDirectory)/build
  condition: eq( variables['Agent.OS'], 'Darwin' )
  artifact: $(build_name)
- publish: $(System.DefaultWorkingDirectory)/build
  condition: eq( variables['Agent.OS'], 'Linux' )
  artifact: $(build_name)
- publish: $(System.DefaultWorkingDirectory)/build
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  artifact: $(build_name)
