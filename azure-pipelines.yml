strategy:
  matrix:
#    64Bit2010:
#      arch: x86_64
#      plat: manylinux2010_x86_64
#      image: quay.io/pypa/manylinux2010_x86_64
#      python.architecture: x64
    64Bit:
      arch: x86_64
      plat: manylinux1_x86_64
      image: quay.io/pypa/manylinux1_x86_64
      python.architecture: x64
#    32Bit:
#      arch: i686
#      plat: manylinux1_i686
#      image: quay.io/pypa/manylinux1_i686
#      python.architecture: x86
pool:
  vmImage: 'ubuntu-16.04'
steps:
  - script: |
      set -ex
      chmod 777 .ci/build-wheels.sh
      docker run -e PLAT=$(plat) -e package_name=pyEDM --rm -v `pwd`:/io $(image) ./io/.ci/build-wheels.sh
      ls -lh wheelhouse/
      mkdir -p dist
      cp wheelhouse/pyEDM*.whl dist/.
    displayName: Build wheels
  - template: .ci/azure-publish-dist.yml

- publish: $(System.DefaultWorkingDirectory)/dist
  artifact: $(plat)
