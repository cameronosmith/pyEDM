parameters:
  pythonVersions: ["3.7", "3.6", "3.5", "2.7"],
  operatingSystems: ['ubuntu-16.04','macos-10.13','vs2017-win2016']

strategy:
  matrix:
     ${{ each py in parameters.pythonVersions }}:
       ${{ each os in parameters.operatingSystems }}:
         ${{ format('{0}{1}', py, os) }}:

pool:
  vmImage: $(imageName)

steps:
#only setup the visual studio environment if on windowz
- task: BatchScript@1
  inputs:
    filename: 'C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat'
    arguments: 'amd64'
    modifyEnvironment: True 
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: setup visual studio env on windows

#download eigen for cppEDM
- script: git clone https://github.com/eigenteam/eigen-git-mirror eigen_git
- script: mv eigen_git/Eigen .
  displayName: download eigen

#build cppEDM with respective makefile
- script: make -C cppEDM/src -f makefile.windows
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: building cppEDM on windows
- script: make -C cppEDM/src
  condition: eq( variables['Agent.OS'], 'Darwin' )
  displayName: building cppEDM on macOS
- script: make -C cppEDM/src 
  condition: eq( variables['Agent.OS'], 'Linux' )
  displayName: building cppEDM on linux

#build the package and download
- script: pip install pybind11
- script: python setup.py build

- publish: $(System.DefaultWorkingDirectory)/build
  condition: eq( variables['Agent.OS'], 'Darwin' )
  artifact: build_macOS
- publish: $(System.DefaultWorkingDirectory)/build
  condition: eq( variables['Agent.OS'], 'Linux' )
  artifact: build_linux
- publish: $(System.DefaultWorkingDirectory)/build
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  artifact: build_windows
