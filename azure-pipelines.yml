
strategy:
  matrix:
    Windows_3.6.8:
      vmImage: 'vs2017-win2016'
      build_name: 'Windows_3.6.8_EDM'
      python.version: '3.6.8'
pool:
  vmImage: $(vmImage)
  python.version: $(python.version)

steps:

- powershell: |
    $wc = New-Object net.webclient;
    $wc.Downloadfile("https://3f23b170c54c2533c070-1c8a9b3114517dc5fe17b7c3f8c63a43.ssl.cf2.rackcdn.com/openblas-v0.3.7-win_amd64-gcc_7_1_0.zip", "openblas.zip")
    $tmpdir = New-TemporaryFile | %{ rm $_; mkdir $_ }
    Expand-Archive "openblas.zip" $tmpdir
    cp $tmpdir\$(BITS)\lib\libopenblas_v0.3.7-gcc_7_1_0.a $(System.DefaultWorkingDirectory)\\cppEDM\\lib\\libopenblas.a
displayName: 'Download / Install OpenBLAS'

- bash: |
    distutils_path=`echo "import distutils,os;print(os.path.dirname(distutils.__file__))"|python`
    mv distutils.cfg $distutils_path
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: setup mingw compiler option for windows build

- bash: |
    distutils_path=`echo "import distutils,os;print(os.path.dirname(distutils.__file__))"|python`
    mv distutils.cfg $distutils_path
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: setup mingw compiler option for windows build

- task: BatchScript@1
  inputs:
    filename: 'C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat'
    arguments: 'amd64'
    modifyEnvironment: True 
  condition: eq( variables['Agent.OS'], 'Windows_NT' )
  displayName: setup visual studio env on windows

- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'

#- script: |
#    pip install requirements.txt
#    pip install wheel
#  displayName: install required python packages
#- script: python setup.py bdist_wheel 
#  displayName: build wheels
